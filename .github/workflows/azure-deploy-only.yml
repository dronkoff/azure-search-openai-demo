name: Deploy without Provision

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      # azd required
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      AZURE_RESOURCE_GROUP: ${{ vars.AZURE_RESOURCE_GROUP }}
      AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}
      AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
      DEPLOYMENT_TARGET: ${{ vars.DEPLOYMENT_TARGET }}
      AZURE_APP_SERVICE_PLAN: ${{ vars.AZURE_APP_SERVICE_PLAN }}
      AZURE_APP_SERVICE: ${{ vars.AZURE_APP_SERVICE }}
      AZURE_APP_SERVICE_SKU: ${{ vars.AZURE_APP_SERVICE_SKU }}
      AZURE_APPLICATION_INSIGHTS: ${{ vars.AZURE_APPLICATION_INSIGHTS }} 
      AZURE_APPLICATION_INSIGHTS_DASHBOARD: ${{ vars.AZURE_APPLICATION_INSIGHTS_DASHBOARD }} 
      AZURE_LOG_ANALYTICS: ${{ vars.AZURE_LOG_ANALYTICS }} 
      ## Define the additional variables or secrets that are required globally (provision and deploy)
      # ADDITIONAL_VARIABLE_PLACEHOLDER: ${{ vars.ADDITIONAL_VARIABLE_PLACEHOLDER }}
      # ADDITIONAL_SECRET_PLACEHOLDER: ${{ secrets.ADDITIONAL_SECRET_PLACEHOLDER }}
      #AZURE_CHAT_HISTORY_CONTAINER: ${{ vars.AZURE_CHAT_HISTORY_CONTAINER }}
      #AZURE_CHAT_HISTORY_DATABASE: ${{ vars.AZURE_CHAT_HISTORY_DATABASE }}
      #AZURE_CHAT_HISTORY_VERSION: ${{ vars.AZURE_CHAT_HISTORY_VERSION }}
      #AZURE_DOCUMENTINTELLIGENCE_RESOURCE_GROUP: ${{ vars.AZURE_DOCUMENTINTELLIGENCE_RESOURCE_GROUP }}
      #AZURE_DOCUMENTINTELLIGENCE_SERVICE: ${{ vars.AZURE_DOCUMENTINTELLIGENCE_SERVICE }}
      #AZURE_OPENAI_CHATGPT_DEPLOYMENT: ${{ vars.AZURE_OPENAI_CHATGPT_DEPLOYMENT }}
      #AZURE_OPENAI_CHATGPT_MODEL: ${{ vars.AZURE_OPENAI_CHATGPT_MODEL }}
      #AZURE_OPENAI_EMB_DEPLOYMENT: ${{ vars.AZURE_OPENAI_EMB_DEPLOYMENT }}
      #AZURE_OPENAI_EMB_MODEL_NAME: ${{ vars.AZURE_OPENAI_EMB_MODEL_NAME }}
      #AZURE_OPENAI_GPT4V_MODEL: ${{ vars.AZURE_OPENAI_GPT4V_MODEL }}
      #AZURE_OPENAI_RESOURCE_GROUP: ${{ vars.AZURE_OPENAI_RESOURCE_GROUP }}
      #AZURE_OPENAI_SERVICE: ${{ vars.AZURE_OPENAI_SERVICE }}
      AZURE_SEARCH_INDEX: ${{ vars.AZURE_SEARCH_INDEX }}
      AZURE_SEARCH_SEMANTIC_RANKER: ${{ vars.AZURE_SEARCH_SEMANTIC_RANKER }}
      AZURE_SEARCH_SERVICE: ${{ vars.AZURE_SEARCH_SERVICE }}
      AZURE_SEARCH_SERVICE_RESOURCE_GROUP: ${{ vars.AZURE_SEARCH_SERVICE_RESOURCE_GROUP }}
      #AZURE_STORAGE_ACCOUNT: ${{ vars.AZURE_STORAGE_ACCOUNT }}
      #AZURE_STORAGE_CONTAINER: ${{ vars.AZURE_STORAGE_CONTAINER }}
      #AZURE_STORAGE_RESOURCE_GROUP: ${{ vars.AZURE_STORAGE_RESOURCE_GROUP }}
      #AZURE_USERSTORAGE_CONTAINER: ${{ vars.AZURE_USERSTORAGE_CONTAINER }}
      #AZURE_USERSTORAGE_RESOURCE_GROUP: ${{ vars.AZURE_USERSTORAGE_RESOURCE_GROUP }}
      #OPENAI_HOST: ${{ vars.OPENAI_HOST }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install azd
        uses: Azure/setup-azd@v2.1.0

      - name: Install Nodejs
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Log in with Azure (Federated Credentials)
        if: ${{ env.AZURE_CLIENT_ID != '' }}
        run: |
          azd auth login `
            --client-id "$Env:AZURE_CLIENT_ID" `
            --federated-credential-provider "github" `
            --tenant-id "$Env:AZURE_TENANT_ID"
        shell: pwsh

      - name: Create azd environment
        run: |
          azd env new $Env:AZURE_ENV_NAME --no-prompt
          azd env set DEPLOYMENT_TARGET $Env:DEPLOYMENT_TARGET --no-prompt
          azd env list
          #azd env refresh --no-prompt
          #cat .\.azure\Chat-App-Dev\.env
          #cat .\.azure\Chat-App-Dev\config.json
        shell: pwsh

      - name: Deploy Application
        run: azd deploy --no-prompt
        shell: pwsh
